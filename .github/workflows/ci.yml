name: Python CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ steps.python-version.outputs.version }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.python-version.outputs.version }}-uv-

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: uv venv

      - name: Install system dependencies for filetype detection
        run: sudo apt-get update && sudo apt-get install -y libmagic1

      - name: Install dependencies
        run: make install

      - name: Run linters and type checker
        run: |
          make lint
          make format-check
          make typecheck

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-${{ steps.python-version.outputs.version }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.python-version.outputs.version }}-uv-

      - name: Cache Hugging Face models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-hf-models-v1

      - name: Cache NLTK data
        uses: actions/cache@v4
        with:
          path: ~/nltk_data
          key: ${{ runner.os }}-nltk-data-v1

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: uv venv

      - name: Install system dependencies for filetype detection
        run: sudo apt-get update && sudo apt-get install -y libmagic1

      - name: Install dependencies
        run: make install

      - name: Pre-cache Hugging Face model for tests
        run: make download-models

      - name: Run tests
        run: make test

      - name: Upload pytest results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: reports/junit.xml

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage
